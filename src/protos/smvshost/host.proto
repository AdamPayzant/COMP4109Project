syntax="proto3";
package smvs;

option go_package = "github.com/AdamPayzant/COMP4109Project/src/protos/smvshost";

service clientHost {
    //rpc for ClientHost
    rpc Ping(Empty) returns (Status);
    rpc DeleteMessage(DeleteReq) returns (Status);
    rpc RecieveText(H2HText) returns (Status);

    // rpc for Client
    rpc LogIn(ClientInfo) returns (Status);
    rpc LogOut(ClientInfo) returns (Status);
    rpc UpdateKey(PublicKeyInfo) returns (Status); // Requests client's host to change keys
    rpc SendText(ClientText) returns (Status);
    rpc PingUser(Username) returns (Status);
    rpc GetConversation(Username) returns (Conversation);
}

// As the name describes
message Empty {

}

message ClientInfo {
    bytes token = 1;
    string username = 2;
    string ip = 3;
}

// Contains the client device's auth token
message PublicKeyInfo {
    bytes token = 1;
    bytes key = 2;
}

// A generic status response message
message Status {
    int32 status = 1;
}

message DeleteReq {
    string user = 1;
    int64 messageID = 2;
    bytes token = 3;
}

// The message to be sent between hosts for texts
message H2HText {
    ListofMessages message = 1;
    string user = 2;
    bytes secret = 3;
}

// Because the way protobuffers (don't) do lists, this is the best way to do this
message ListofMessages {
    repeated string messages = 1;
}

message ClientText {
    string targetUser = 1;
    ListofMessages message = 2;
    bytes secret = 3;
    bytes token = 4; // The client device's auth token
}

message Username {
    bytes token = 1;
    string username = 2;
}

// This will just send the full conversation
message Conversation {
    ListofMessages convo = 1;
}